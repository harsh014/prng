
import PRNG.BG;
import PRNG.PNG;
import Tests.AC;
import Tests.FMT;
import Tests.PT;
import Tests.RT;
import Tests.S2B;

import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author harsh014
 */
public class Main extends javax.swing.JFrame {

    long[] lng;

    /**
     * Creates new form FrontGUI
     */
    public Main() {
        initComponents();
        complex.setVisible(false);
        jLabel2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        prime1 = new javax.swing.JTextField();
        prime2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        complex = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        submit_nos = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        prime = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sequence = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        fmt = new javax.swing.JButton();
        rt = new javax.swing.JButton();
        pt = new javax.swing.JButton();
        stt = new javax.swing.JButton();
        act = new javax.swing.JButton();
        FMT_label = new javax.swing.JLabel();
        RT_label = new javax.swing.JLabel();
        S2B_label = new javax.swing.JLabel();
        P_label = new javax.swing.JLabel();
        AC_label = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        submit_prime = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        prime_nos = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(566, 720));
        setResizable(false);

        title.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(153, 153, 0));
        title.setText("BIT SEQUENCE GENERATOR");

        jLabel1.setText("Enter prime numbers:");

        jLabel2.setText("Enter complexity:");

        jLabel4.setText("ii)");

        submit_nos.setText("Submit");
        submit_nos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_nosActionPerformed(evt);
            }
        });

        jLabel6.setText("List of primes generated: ");

        jLabel7.setText("Select a prime");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 153, 0));
        jLabel8.setText("BIT SEQUENCE GENERATED:");

        sequence.setColumns(20);
        sequence.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        sequence.setForeground(new java.awt.Color(153, 153, 0));
        sequence.setRows(5);
        jScrollPane2.setViewportView(sequence);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 153, 0));
        jLabel9.setText("TESTING THE ALGORITHM:");

        fmt.setText("Frequency Monobit Test");
        fmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmtActionPerformed(evt);
            }
        });

        rt.setText("Runs Test");
        rt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtActionPerformed(evt);
            }
        });

        pt.setText("Poker Test");
        pt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ptActionPerformed(evt);
            }
        });

        stt.setText("Serial Two Bit Test");
        stt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sttActionPerformed(evt);
            }
        });

        act.setText("Auto Corelation Test");
        act.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actActionPerformed(evt);
            }
        });

        FMT_label.setText("Not tested!");

        RT_label.setText("Not tested!");

        S2B_label.setText("Not tested!");

        P_label.setText("Not tested!");

        AC_label.setText("Not tested!");

        clear.setText("Reset");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        submit_prime.setText("Submit");
        submit_prime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_primeActionPerformed(evt);
            }
        });

        prime_nos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " ", " ", " ", " ", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(prime_nos);

        jLabel5.setText("i)");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("Created by: Akshay & Harsh");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clear)
                        .addGap(75, 75, 75)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(jLabel8))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel6)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(complex, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(prime, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(60, 60, 60)
                                            .addComponent(submit_prime, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(FMT_label)
                                        .addGap(123, 123, 123)
                                        .addComponent(RT_label))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(fmt)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(P_label))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(submit_nos, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addGap(8, 8, 8)
                                        .addComponent(prime1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prime2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(S2B_label)
                                        .addGap(85, 85, 85)
                                        .addComponent(AC_label))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(stt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(act, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(103, 103, 103))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(title)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prime2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(submit_nos)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(prime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(submit_prime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(complex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)))
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fmt)
                    .addComponent(rt)
                    .addComponent(pt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RT_label)
                    .addComponent(FMT_label)
                    .addComponent(P_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stt)
                    .addComponent(act))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(S2B_label)
                    .addComponent(AC_label))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear)
                    .addComponent(jLabel10))
                .addGap(5, 5, 5))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //    code for frequency monobit test case
    private void fmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmtActionPerformed
        // TODO add your handling code here:
        String c = sequence.getText();
        FMT f = new FMT(c);
        String ch = f.test();
        FMT_label.setText(ch);
    }//GEN-LAST:event_fmtActionPerformed

    //    code for runs test case
    private void rtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtActionPerformed
        // TODO add your handling code here:
        String c = sequence.getText();
        RT r = new RT(c);
        String ch = r.test();
        RT_label.setText(ch);
    }//GEN-LAST:event_rtActionPerformed

    //    code for serial 2 bit test case
    private void sttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sttActionPerformed
        // TODO add your handling code here:
        String c = sequence.getText();
        S2B s2b = new S2B(c);
        String ch = s2b.test();
        S2B_label.setText(ch);
    }//GEN-LAST:event_sttActionPerformed

    //    code for poker test case
    private void ptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ptActionPerformed
        // TODO add your handling code here:
        String c = sequence.getText();
        PT p;
        p = new PT(c);
        String ch = p.test();
        P_label.setText(ch);

    }//GEN-LAST:event_ptActionPerformed

//    code for auto-corelation test case
    private void actActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actActionPerformed
        // TODO add your handling code here:
        String c = sequence.getText();
        AC ac = new AC(c);
        int temp;
        do {
            String in = JOptionPane.showInputDialog("Enter a value between 1 and " + c.length() / 2 + " :");
            temp = Integer.parseInt(in);
        } while (temp > 50 || temp < 0);
        String ch;
        ch = ac.test(temp);
        AC_label.setText(ch);
    }//GEN-LAST:event_actActionPerformed

//    code to clear all
    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:

        prime1.setText(null);
        prime2.setText(null);
        prime_nos.setListData(new Object[0]);
        prime.setText(null);
        sequence.setText(null);
        FMT_label.setText("Not tested!");
        RT_label.setText("Not tested!");
        P_label.setText("Not tested!");
        AC_label.setText("Not tested!");
        S2B_label.setText("Not tested!");
    }//GEN-LAST:event_clearActionPerformed

    private void submit_primeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_primeActionPerformed
        // TODO add your handling code here:
//        int abc;
//        do {
//            String in = JOptionPane.showInputDialog("Enter complexity level (1 or 2):");
//            abc = Integer.parseInt(in);
//        } while (abc < 1 || abc > 2);

        int x = Integer.parseInt(prime1.getText());
        int y = Integer.parseInt(prime2.getText());

        BG bg = new BG(Integer.parseInt(prime.getText()), 1, x, y);
        sequence.setText(bg.gen());
    }//GEN-LAST:event_submit_primeActionPerformed

    private void submit_nosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_nosActionPerformed
        // TODO add your handling code here:
        int x, y;
//        do {
        x = Integer.parseInt(prime1.getText());
        y = Integer.parseInt(prime2.getText());
//        }while (prime_check1(x) && prime_check2(y));
//        int level = Integer.parseInt(complex.getText());
        PNG png = new PNG(x, y, 1);
        lng = png.init();

        prime_nos.setModel(new javax.swing.AbstractListModel() {

            @Override
            public int getSize() {
                return lng.length;
            }

            @Override
            public Object getElementAt(int i) {
                return lng[i];
            }
        });
    }//GEN-LAST:event_submit_nosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AC_label;
    private javax.swing.JLabel FMT_label;
    private javax.swing.JLabel P_label;
    private javax.swing.JLabel RT_label;
    private javax.swing.JLabel S2B_label;
    private javax.swing.JButton act;
    private javax.swing.JButton clear;
    private javax.swing.JTextField complex;
    private javax.swing.JButton fmt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField prime;
    private javax.swing.JTextField prime1;
    private javax.swing.JTextField prime2;
    private javax.swing.JList prime_nos;
    private javax.swing.JButton pt;
    private javax.swing.JButton rt;
    private javax.swing.JTextArea sequence;
    private javax.swing.JButton stt;
    private javax.swing.JButton submit_nos;
    private javax.swing.JButton submit_prime;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

//    private boolean prime_check1(int a) {
//        if (a % 2 == 0) {
//            JOptionPane.showMessageDialog(null, "Entered number is not prime!", "Error!", JOptionPane.WARNING_MESSAGE);
//            System.exit(0);
//            return false;
//        }
//        for (int i = 3; i * i <= a; i += 2) {
//            if (a % i == 0) {
//                return true;
//            }
//        }
//        return true;
//    }
//
//    private boolean prime_check2(int a) {
//        if (a % 2 == 0) {
//            JOptionPane.showMessageDialog(null, "Entered number is not prime!", "Error!", JOptionPane.WARNING_MESSAGE);
//            System.exit(0);
//            return false;
//        }
//        for (int i = 3; i * i <= a; i += 2) {
//            if (a % i == 0) {
//                return true;
//            }
//        }
//        return true;
//    }
}
